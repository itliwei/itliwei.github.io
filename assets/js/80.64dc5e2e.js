(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{531:function(v,_,t){"use strict";t.r(_);var r=t(11),s=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"数据结构"}},[v._v("数据结构")]),v._v(" "),t("p",[v._v("基础数据结构：数组、链表、栈、队列、散列表、树、堆、图。")]),v._v(" "),t("h2",{attrs:{id:"线性结构"}},[v._v("线性结构")]),v._v(" "),t("h3",{attrs:{id:"线性表"}},[v._v("线性表")]),v._v(" "),t("p",[v._v("线性表是最简单、最基本、最常用的一种数据结构，可以将若干个数据组成的集合看作成一个线性表。")]),v._v(" "),t("h4",{attrs:{id:"数组"}},[v._v("数组")]),v._v(" "),t("p",[v._v("数组是可以再内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始。例如下面这段代码就是将数组的第一个元素赋值为 1。")]),v._v(" "),t("h4",{attrs:{id:"链表"}},[v._v("链表")]),v._v(" "),t("p",[v._v("链表是采用动态存储分配的一种结构，用一组非连续的存储单元存放数据元素。擅长于增加与删除操作，但对于访问链表中的元素时，效率不高。")]),v._v(" "),t("h4",{attrs:{id:"散列表"}},[v._v("散列表")]),v._v(" "),t("p",[v._v("散列表，也叫哈希表，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。")]),v._v(" "),t("h3",{attrs:{id:"队列"}},[v._v("队列")]),v._v(" "),t("p",[v._v("队列与栈一样，也是一种线性表，不同的是，队列可以在一端添加元素，在另一端取出元素，也就是：先进先出。从一端放入元素的操作称为入队，取出元素为出队。")]),v._v(" "),t("h3",{attrs:{id:"栈"}},[v._v("栈")]),v._v(" "),t("p",[v._v("栈是一种特殊的线性表，仅能在线性表的一端操作，栈顶允许操作，栈底不允许操作。 栈的特点是：先进后出，或者说是后进先出，从栈顶放入元素的操作叫入栈，取出元素叫出栈。")]),v._v(" "),t("h2",{attrs:{id:"树形结构"}},[v._v("树形结构")]),v._v(" "),t("p",[v._v("树是一种数据结构，它是由n（n>=1）个有限节点组成一个具有层次关系的集合。把它叫做 “树” 是因为它看起来像一棵倒挂的树。")]),v._v(" "),t("h3",{attrs:{id:"二叉树"}},[v._v("二叉树")]),v._v(" "),t("h4",{attrs:{id:"平衡二叉树"}},[v._v("平衡二叉树")]),v._v(" "),t("h4",{attrs:{id:"红黑树"}},[v._v("红黑树")]),v._v(" "),t("h3",{attrs:{id:"多叉数"}},[v._v("多叉数")]),v._v(" "),t("h4",{attrs:{id:"b树"}},[v._v("B树")]),v._v(" "),t("p",[v._v("B树是一种平衡多路搜索树。B树与红黑树最大的不同在于，B树的结点可以有多个子女。")]),v._v(" "),t("h4",{attrs:{id:"b-树"}},[v._v("B+树")]),v._v(" "),t("p",[v._v("B+树是对B树的一种变形，所有数据都保存在叶子节点。")]),v._v(" "),t("h3",{attrs:{id:"堆"}},[v._v("堆")]),v._v(" "),t("p",[v._v("堆是计算机科学中一类特殊的数据结构的统称。堆通常是一个可以被看做一棵树的数组对象。")]),v._v(" "),t("p",[v._v("堆总是满足下列性质：")]),v._v(" "),t("p",[v._v("（1）堆中某个节点的值总是不大于或不小于其父节点的值；")]),v._v(" "),t("p",[v._v("（2）堆总是一棵完全二叉树。")]),v._v(" "),t("p",[v._v("常见的堆有二叉堆、斐波那契堆等。")]),v._v(" "),t("h4",{attrs:{id:"大顶堆"}},[v._v("大顶堆")]),v._v(" "),t("p",[v._v("对于每个节点的值都大于等于子树中每个节点值的堆，我们叫做“大顶堆”。")]),v._v(" "),t("h4",{attrs:{id:"小顶堆"}},[v._v("小顶堆")]),v._v(" "),t("p",[v._v("对于每个节点的值都小于等于子树中每个节点值的堆，我们叫做“小顶堆”。")]),v._v(" "),t("h3",{attrs:{id:"trie树"}},[v._v("Trie树")]),v._v(" "),t("h2",{attrs:{id:"图形结构"}},[v._v("图形结构")]),v._v(" "),t("p",[v._v("图是由结点的有穷集合V和边的集合E组成。其中，为了与树形结构加以区别，在图结构中常常将结点称为顶点，边是顶点的有序偶对，若两个顶点之间存在一条边，就表示这两个顶点具有相邻关系。")]),v._v(" "),t("h3",{attrs:{id:"有向图"}},[v._v("有向图")]),v._v(" "),t("h3",{attrs:{id:"无向图"}},[v._v("无向图")])])}),[],!1,null,null,null);_.default=s.exports}}]);