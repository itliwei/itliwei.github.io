(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{515:function(t,s,v){"use strict";v.r(s);var _=v(11),i=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"程序员基础思维"}},[t._v("程序员基础思维")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("好好学习，天天向上！")]),t._v(" "),v("p",[t._v("子曰：“吾日三省吾身：为人谋而不忠乎？与朋友交而不信乎？传不习乎？”")]),t._v(" "),v("div",{staticClass:"custom-block right"})]),t._v(" "),v("h2",{attrs:{id:"唯一不变的就是变化"}},[t._v("唯一不变的就是变化")]),t._v(" "),v("p",[t._v("人会变，技术也会变，业务也在变！我们唯一能做的就是减少变化，如何减少变化？抓住本质！对于技术人来说，不断充电才是提升职场竞争力的关键法宝。")]),t._v(" "),v("h2",{attrs:{id:"没有完美"}},[t._v("没有完美")]),t._v(" "),v("p",[t._v("没有完美的人，也没有完美的软件，我们要做的是让它不断趋于完美。最理想的办法就是小步前进，这也是敏捷方法的核心。开发人员可以使用短迭代和增量开发，既专注又有效率，还能及时从反馈中获得新的灵感，一步步走向完美。")]),t._v(" "),v("h2",{attrs:{id:"保持简单"}},[t._v("保持简单")]),t._v(" "),v("p",[t._v("我们常说“less is more”，简单就是美！用简单的代码、简单的架构实现简单的功能！越简单，越接近本质，越通用！")]),t._v(" "),v("h2",{attrs:{id:"保持节奏"}},[t._v("保持节奏")]),t._v(" "),v("p",[t._v("这个节奏即是工作节奏，也是学习节奏。见过太多程序员，总是忙于工作，而忽略学习。节奏可以不让你慌乱，规划好编写代码、运行测试、Code Review、迭代到发布，整个项目有规律并循序渐进。他们把一个庞大的目标分割成数个小目标，设置好每个目标的 deadline，每完成一个目标也会更激励自己和团队，一起加速前进。")]),t._v(" "),v("h2",{attrs:{id:"代码是不会骗人的"}},[t._v("代码是不会骗人的")]),t._v(" "),v("p",[t._v("在排查问题的时候，不要怀有侥幸心理。出问题，肯定是有问题，没有找到问题，是自己的问题。")])])}),[],!1,null,null,null);s.default=i.exports}}]);