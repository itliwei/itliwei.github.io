(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{403:function(v,_,t){v.exports=t.p+"assets/img/image-20211127171450889.9c691cd0.png"},404:function(v,_,t){v.exports=t.p+"assets/img/image-20211127173644445.d70f9b41.png"},405:function(v,_,t){v.exports=t.p+"assets/img/image-20211127180417653.94eb2be7.png"},406:function(v,_,t){v.exports=t.p+"assets/img/image-20211127182319157.3037808a.png"},407:function(v,_,t){v.exports=t.p+"assets/img/image-20211127184043916.5d116246.png"},408:function(v,_,t){v.exports=t.p+"assets/img/image-20211128135217635.b948404e.png"},409:function(v,_,t){v.exports=t.p+"assets/img/image-20211128135750364.ce21d4e0.png"},550:function(v,_,t){"use strict";t.r(_);var s=t(11),i=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"在线im系统设计"}},[v._v("在线IM系统设计")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("沟通的效率提升，成本下降！")]),v._v(" "),s("p",[v._v("IM，在整个互联网生态无处不在")]),v._v(" "),s("div",{staticClass:"custom-block right"})]),v._v(" "),s("h1",{attrs:{id:"im即时通讯"}},[v._v("IM即时通讯")]),v._v(" "),s("h2",{attrs:{id:"im基本要素"}},[v._v("IM基本要素")]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[s("img",{attrs:{src:t(403),alt:"image-20211127171450889"}})])]),v._v(" "),s("h3",{attrs:{id:"账号"}},[v._v("账号")]),v._v(" "),s("ul",[s("li",[v._v("用户信息")]),v._v(" "),s("li",[v._v("机器人账号")]),v._v(" "),s("li",[v._v("系统账号")])]),v._v(" "),s("h3",{attrs:{id:"关系"}},[v._v("关系")]),v._v(" "),s("ul",[s("li",[v._v("好友关系")]),v._v(" "),s("li",[v._v("群组关系")])]),v._v(" "),s("h3",{attrs:{id:"消息"}},[v._v("消息")]),v._v(" "),s("ul",[s("li",[v._v("聊天消息")]),v._v(" "),s("li",[v._v("事件消息")]),v._v(" "),s("li",[v._v("心跳消息")]),v._v(" "),s("li",[v._v("系统消息")])]),v._v(" "),s("h3",{attrs:{id:"会话"}},[v._v("会话")]),v._v(" "),s("ul",[s("li",[v._v("发起会话")]),v._v(" "),s("li",[v._v("接起会话")]),v._v(" "),s("li",[v._v("转接会话")]),v._v(" "),s("li",[v._v("关闭会话")]),v._v(" "),s("li",[v._v("……")])]),v._v(" "),s("h2",{attrs:{id:"im系统架构"}},[v._v("IM系统架构")]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[s("img",{attrs:{src:t(404),alt:"image-20211127173644445"}})])]),v._v(" "),s("h3",{attrs:{id:"客户端"}},[v._v("客户端")]),v._v(" "),s("ul",[s("li",[v._v("WEB")]),v._v(" "),s("li",[v._v("Android")]),v._v(" "),s("li",[v._v("IOS")]),v._v(" "),s("li",[v._v("PC")]),v._v(" "),s("li",[v._v("……")])]),v._v(" "),s("h3",{attrs:{id:"网关层"}},[v._v("网关层")]),v._v(" "),s("ul",[s("li",[v._v("连接保持")]),v._v(" "),s("li",[v._v("协议解析：聊天消息、心跳消息……")]),v._v(" "),s("li",[v._v("Session管理")]),v._v(" "),s("li",[v._v("消息路由")]),v._v(" "),s("li",[v._v("……")])]),v._v(" "),s("h3",{attrs:{id:"业务层"}},[v._v("业务层")]),v._v(" "),s("ul",[s("li",[v._v("消息存储")]),v._v(" "),s("li",[v._v("消息去重")]),v._v(" "),s("li",[v._v("消息转发")]),v._v(" "),s("li",[v._v("外部通知：离线通知、业务通知")])]),v._v(" "),s("h3",{attrs:{id:"存储层"}},[v._v("存储层")]),v._v(" "),s("ul",[s("li",[v._v("MySQL")]),v._v(" "),s("li",[v._v("Redis")]),v._v(" "),s("li",[v._v("Hbase")])]),v._v(" "),s("h2",{attrs:{id:"im要求特性"}},[v._v("IM要求特性")]),v._v(" "),s("h3",{attrs:{id:"实时性"}},[v._v("实时性")]),v._v(" "),s("p",[v._v("定时查找：短轮训")]),v._v(" "),s("p",[v._v("减少定时：长轮训")]),v._v(" "),s("p",[v._v("最终选择：长链接")]),v._v(" "),s("h4",{attrs:{id:"websocket"}},[v._v("websocket")]),v._v(" "),s("p",[v._v("1、支持服务端推送的双向通信，大幅降低服务端轮询压力；"),s("br"),v._v("\n2、数据交互的控制开销低，降低双方通信的网络开销；"),s("br"),v._v("\n3、Web 原生支持，实现相对简单。")]),v._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/itliwei/kagaya",target:"_blank",rel:"noopener noreferrer"}},[v._v("代码参考"),s("OutboundLink")],1)]),v._v(" "),s("h3",{attrs:{id:"安全性"}},[v._v("安全性")]),v._v(" "),s("h4",{attrs:{id:"_1-消息传输安全性"}},[v._v("1.消息传输安全性")]),v._v(" "),s("p",[v._v("常用协议参考："),s("a",{attrs:{href:"https://www.cnblogs.com/dubo-/p/5586037.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("主流IM协议简介"),s("OutboundLink")],1)]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("常用协议")]),s("p",[v._v("XMPP 协议虽然比较成熟、扩展性也不错，但基于 XML 格式的协议传输上冗余比较多，在流量方面不太友好，而且整体实现上比较复杂，在如今移动网络场景下用得并不多。"),s("br"),v._v("\nMQTT 基于代理的“发布 / 订阅”模式，在省流量和扩展性方面都比较突出，在很多消息推送场景下被广泛使用，但这个协议并不是 IM 领域的专有协议，因此对于很多 IM 下的个性化业务场景仍然需要大量复杂的扩展和开发，比如不支持群组功能、不支持离线消息。")])]),s("ul",[s("li",[v._v("私有协议")]),v._v(" "),s("li",[v._v("TLS 传输层加密协议")])]),v._v(" "),s("h4",{attrs:{id:"_2-消息存储安全性"}},[v._v("2.消息存储安全性")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("账号密码安全")]),v._v(" "),s("p",[v._v("“单向散列”算法加密")])]),v._v(" "),s("li",[s("p",[v._v("消息不存储(国内基本做不到)")])])]),v._v(" "),s("h4",{attrs:{id:"_3-消息内容安全性"}},[v._v("3.消息内容安全性")]),v._v(" "),s("ul",[s("li",[v._v("敏感词校验。")])]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("参考内容")]),s("p",[s("a",{attrs:{href:"https://github.com/elulis/sensitive-words",target:"_blank",rel:"noopener noreferrer"}},[v._v("代码参考"),s("OutboundLink")],1)]),v._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/bytecodebuffer/p/14486877.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("原理参考"),s("OutboundLink")],1)])]),s("ul",[s("li",[v._v("对色情图片和视频、广告图片、涉政图片等进行识别。")])]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("参考内容")]),s("p",[s("a",{attrs:{href:"https://github.com/nguyenq/tess4j",target:"_blank",rel:"noopener noreferrer"}},[v._v("代码参考"),s("OutboundLink")],1)]),v._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/121074333",target:"_blank",rel:"noopener noreferrer"}},[v._v("原理参考"),s("OutboundLink")],1)])]),s("ul",[s("li",[v._v("通过爬虫技术来对链接内容进行进一步分析，识别“风险外链”。")])]),v._v(" "),s("h3",{attrs:{id:"可靠性"}},[v._v("可靠性")]),v._v(" "),s("p",[v._v("一般包括两个方面：")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("不丢消息。")]),v._v(" "),s("p",[v._v("“丢消息”是互动中让人难以接受的 Bug，某些场景下可能导致业务可用性差，甚至不可用的情况。")])]),v._v(" "),s("li",[s("p",[v._v("消息不重复。")]),v._v(" "),s("p",[v._v("消息重复不仅会对用户造成不必要的骚扰和困惑，可能还会导致比较严重的业务异常。")])])]),v._v(" "),s("h4",{attrs:{id:"消息流转图"}},[v._v("消息流转图")]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[s("img",{attrs:{src:t(405),alt:"image-20211127180417653"}})])]),v._v(" "),s("h4",{attrs:{id:"两步解决"}},[v._v("两步解决")]),v._v(" "),s("p",[s("strong",[v._v("第一步")]),v._v("：客户端 A 发送消息到 IM 服务器，服务器将消息暂存，然后返回成功的结果给发送方 A（步骤 1、2、3）；")]),v._v(" "),s("ul",[s("li",[v._v("1过程A设备发送没有发到服务端")]),v._v(" "),s("li",[v._v("2过程达到服务器处理失败了")]),v._v(" "),s("li",[v._v("2过程处理成功了，3过程回执失败了")])]),v._v(" "),s("h5",{attrs:{id:"解决思路："}},[v._v("解决思路：")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("客户端A超时重发")])]),v._v(" "),s("li",[s("p",[v._v("服务端消息去重")])])]),v._v(" "),s("p",[s("strong",[v._v("第二步")]),v._v("：IM 服务器接着再将暂存的客户端 A 发出的消息，推送给接收方用户 B（步骤 4）。")]),v._v(" "),s("ul",[s("li",[v._v("服务器异常没有发送")]),v._v(" "),s("li",[v._v("B设备异常没有接收")]),v._v(" "),s("li",[v._v("B接收后没有处理好就挂了")])]),v._v(" "),s("h5",{attrs:{id:"解决思路：-2"}},[v._v("解决思路：")]),v._v(" "),s("ul",[s("li",[v._v("业务ACK机制")])]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[s("img",{attrs:{src:t(406),alt:"image-20211127182319157"}})])]),v._v(" "),s("p",[v._v("IM 服务器的“等待 ACK 队列”一般都会维护一个超时计时器，一定时间内如果没有收到用户 B 回的 ACK 包，会从“等待 ACK 队列”中重新取出那条消息进行重推。")]),v._v(" "),s("p",[s("strong",[v._v("通过这个方式真的可以解决吗？")])]),v._v(" "),s("p",[v._v("设想一下，假设一台 IM 服务器在推送出消息后，由于硬件原因宕机了，这种情况下，如果这条消息真的丢了，由于负责的 IM 服务器宕机了无法触发重传，导致接收方 B 收不到这条消息。")]),v._v(" "),s("p",[s("strong",[v._v("如何解决呢？")])]),v._v(" "),s("p",[v._v("​\t分布式定时查询补偿？实时性和性能都有问题。")]),v._v(" "),s("ul",[s("li",[v._v("客户端主动拉取")])]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[s("img",{attrs:{src:t(407),alt:"image-20211127184043916"}})])]),v._v(" "),s("h3",{attrs:{id:"一致性"}},[v._v("一致性")]),v._v(" "),s("p",[v._v("​\t同一条消息，在多人、多终端需要保证展现顺序的一致性。")]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("问题描述")]),s("p",[v._v("​单聊场景，时序一致性需要保证接收方的接收顺序和发送方的发出顺序一致；")]),v._v(" "),s("p",[v._v("群聊场景，时序一致性保证的是群里所有接收人看到的消息展现顺序都一样。")])]),s("h4",{attrs:{id:"难点分析："}},[v._v("难点分析：")]),v._v(" "),s("p",[v._v("​\t多发送方、多接收方、服务端多线程、服务端集群部署。")]),v._v(" "),s("h4",{attrs:{id:"如何解决"}},[v._v("如何解决?")]),v._v(" "),s("p",[v._v("​\t找到一个核心的"),s("strong",[v._v("时序基准")]),v._v("。可以是时间戳，也可以是序列号。前提是保证其有序。")]),v._v(" "),s("p",[s("strong",[v._v("客户端时序")])]),v._v(" "),s("ul",[s("li",[v._v("客户端时钟不靠谱")]),v._v(" "),s("li",[v._v("客户端本地序号不靠谱")]),v._v(" "),s("li",[v._v("单用户多点登录")])]),v._v(" "),s("p",[s("strong",[v._v("服务器时序")])]),v._v(" "),s("ul",[s("li",[v._v("服务端集群化部署")])]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("NTP服务器间时间差异")]),s("p",[v._v("多台服务器通过 NTP 时间同步服务，能降低服务集群机器间的时钟差异到毫秒级别，但仍然还是存在一定的时钟误差。")])]),s("p",[v._v("更多内容参考："),s("a",{attrs:{href:"https://www.36kr.com/p/1720928927745",target:"_blank",rel:"noopener noreferrer"}},[v._v("分布式系统一致性的发展历史"),s("OutboundLink")],1)]),v._v(" "),s("p",[s("strong",[v._v("全局时钟")])]),v._v(" "),s("p",[v._v("​\t这种“全局序号生成器”可以通过多种方式来实现，常见的比如 Redis 的原子自增命令 incr，DB 自带的自增 id，或者类似 Twitter 的 snowflake 算法、“时间相关”的分布式序号生成服务等。")]),v._v(" "),s("ul",[s("li",[v._v("性能问题")])]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("分布式自增ID")]),s("p",[v._v("类似 Redis 的原子自增和 DB 的自增 id，都要求在主库上来执行“取号”操作，而主库基本都是单点部署，在可用性上的保障会相对较差，另外，针对高并发的取号操作这个单点的主库可能容易出现性能瓶颈。")]),v._v(" "),s("p",[v._v("类似 snowflake 算法的时间相关的分布式“序号生成器”，虽然在发号性能上一般问题不大，但也存在一些问题。")])]),s("h4",{attrs:{id:"回归需求本身："}},[v._v("回归需求本身：")]),v._v(" "),s("p",[v._v("​\t群聊和多点登录这种场景，没有必要保证全局的跨多个群的绝对时序性，只需要保证某一个群的消息有序即可。（每一个群有独立一个“序号生成器”）")]),v._v(" "),s("p",[v._v("​\t可以接受消息时序上存在一定的细微误差，比如同一秒收到同一个群的多条消息，业务上是可以接受这一秒的多条消息。（秒级别的误差可以接受）")]),v._v(" "),s("div",{staticClass:"quote"},[s("p",{staticClass:"title"},[v._v("业界实现方案")]),s("p",[v._v("微信的聊天和朋友圈的消息时序也是通过一个“递增”的版本号服务来进行实现的。\n微博的消息箱则是依赖“分布式的时间相关的 ID 生成器”来对私信、群聊等业务进行排序，目前的精度能保证秒间有序。")])]),s("p",[v._v("​\t所以，我们可以选取 "),s("strong",[v._v("多集群的全局时钟")]),v._v("。兼顾时序性和性能。")]),v._v(" "),s("h4",{attrs:{id:"这就解决了吗？"}},[v._v("这就解决了吗？")]),v._v(" "),s("ul",[s("li",[v._v("IM 服务器都是集群化部署，每台服务器的机器性能存在差异，因此处理效率有差别，并不能保证先到的消息一定可以先推送到接收方，比如有的服务器处理得慢，或者刚好碰到一次 GC，导致它接收的更早消息，反而比其他处理更快的机器更晚推送出去。")]),v._v(" "),s("li",[v._v("IM 服务端接收到发送方的消息后，之后相应的处理一般都是多线程进行处理的，比如“取序号”“存储消息”“查询接收方连接信息”“发送消息”等，由于多线程处理流程，并不能保证先取到序号的消息能先到达接收方，这样的话对于多个接收方看到的消息顺序可能是不一致的。")])]),v._v(" "),s("p",[s("strong",[v._v("消息整流")])]),v._v(" "),s("p",[v._v("所谓消息整流，是指将一些消息整理好顺序，然后一起发送。保证消息在一个批次内有序。")]),v._v(" "),s("p",[s("strong",[v._v("客户端整流")])]),v._v(" "),s("ol",[s("li",[v._v("下推消息时，连同消息和序号一起推送给接收方；")]),v._v(" "),s("li",[v._v("接收方收到消息后进行判定，如果当前消息序号大于前一条消息的序号就将当前消息追加在会话里；")]),v._v(" "),s("li",[v._v("否则继续往前查找倒数第二条、第三条等，一直查找到恰好小于当前推送消息的那条消息，然后插入在其后展示。")])]),v._v(" "),s("p",[s("strong",[v._v("服务端整流")])]),v._v(" "),s("ol",[s("li",[v._v("首先，生产者为每个消息包生成一个 packageID，为包内的每条消息加个有序自增的 seqId。")]),v._v(" "),s("li",[v._v("其次，消费者根据每条消息的 packageID 和 seqID 进行整流，最终执行模块只有在一定超时时间内完整有序地收到所有消息才执行最终操作，否则将根据业务需要触发重试或者直接放弃操作。通过服务端整流，服务端包内整流大概就是图中这个样子，我们要做的是在最终服务器取到 TCP 连接后下推的时候，根据包的 ID，对一定时间内的消息做一个整流和排序，这样即使服务端处理多条消息时出现乱序，仍然可以在最终推送给客户端时整流为有序的。")])]),v._v(" "),s("h2",{attrs:{id:"im高级设计"}},[v._v("IM高级设计")]),v._v(" "),s("h3",{attrs:{id:"功能设计"}},[v._v("功能设计")]),v._v(" "),s("h4",{attrs:{id:"未读消息数"}},[v._v("未读消息数")]),v._v(" "),s("p",[v._v("​\t会话未读：当前用户和某一个聊天方的未读消息数。")]),v._v(" "),s("p",[v._v("​\t总未读：当前用户的所有未读消息数，所有会话未读数的总和。")]),v._v(" "),s("p",[s("strong",[v._v("总未读数单独维护还是不维护？")])]),v._v(" "),s("p",[v._v("不维护：根据会话未读数求和")]),v._v(" "),s("p",[v._v("问题：")]),v._v(" "),s("p",[v._v("​\t1、总未读一般高频使用，每次查的话有性能压力")]),v._v(" "),s("p",[v._v("​\t2、如果查的过程中有一个会话(公众号消息等)查询失败，会造成计数错误。")]),v._v(" "),s("p",[v._v("出于以上考虑，总未读数和会话未读数一般是单独维护的。")]),v._v(" "),s("p",[v._v("单独维护：")]),v._v(" "),s("p",[v._v("问题：")]),v._v(" "),s("p",[v._v("​\t1、如何保证未读数的一致性。")]),v._v(" "),s("h5",{attrs:{id:"如何维护？"}},[v._v("如何维护？")]),v._v(" "),s("p",[v._v("场景一：事务一致性问题")]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[v._v("​\t\t"),s("img",{attrs:{src:t(408),alt:"image-20211128135217635"}})])]),v._v(" "),s("p",[v._v("场景二：顺序一致性问题")]),v._v(" "),s("div",{staticClass:"custom-block center"},[s("p",[v._v("​\t\t"),s("img",{attrs:{src:t(409),alt:"image-20211128135750364"}})])]),v._v(" "),s("p",[s("strong",[v._v("分布式锁")])]),v._v(" "),s("p",[v._v("​\tRedis 的 setNX ，ZK的临时节点等。")]),v._v(" "),s("p",[v._v("问题：")]),v._v(" "),s("p",[v._v("1.性能问题\n2.死锁问题")]),v._v(" "),s("p",[s("strong",[v._v("事务")])]),v._v(" "),s("p",[v._v("​\tRedis 通过 MULTI、DISCARD 、EXEC 和 WATCH 四个命令来支持事务操作。")]),v._v(" "),s("p",[v._v("问题：")]),v._v(" "),s("p",[v._v("这个方案在性能上还是存在一定的问题，由于 watch 操作实际是一个乐观锁策略，对于未读变更较频繁的场景下（比如一个很火的群里大家发言很频繁），可能需要多次重试才可以最终执行成功，这种情况下执行效率低，性能上也会比较差。")]),v._v(" "),s("p",[s("strong",[v._v("原子化嵌入脚本")])]),v._v(" "),s("p",[v._v("​\tRedis 就支持通过嵌入 Lua 脚本来原子化执行多条语句。")]),v._v(" "),s("p",[v._v("问题：\n1.实现复杂，需要一定的学习成本；\n2.Redis 本身是服务端单线程模型，Lua 脚本中尽量不要有远程访问和其他耗时的操作，以免长时间Hang住，导致整个资源不可用。")]),v._v(" "),s("h4",{attrs:{id:"多端漫游"}},[v._v("多端漫游")]),v._v(" "),s("h3",{attrs:{id:"高可用设计"}},[v._v("高可用设计")]),v._v(" "),s("h4",{attrs:{id:"扩缩容"}},[v._v("扩缩容")]),v._v(" "),s("h4",{attrs:{id:"扩容"}},[v._v("扩容")]),v._v(" "),s("p",[s("strong",[v._v("如何扩容？")])]),v._v(" "),s("p",[v._v("新加了一台机器，")]),v._v(" "),s("h4",{attrs:{id:"缩容"}},[v._v("缩容")]),v._v(" "),s("p",[s("strong",[v._v("如何缩容？")])]),v._v(" "),s("h4",{attrs:{id:"降级限流"}},[v._v("降级限流")]),v._v(" "),s("h5",{attrs:{id:"业务降级"}},[v._v("业务降级")]),v._v(" "),s("p",[s("strong",[v._v("点赞业务降级")])]),v._v(" "),s("p",[s("strong",[v._v("礼物业务降级")])]),v._v(" "),s("h5",{attrs:{id:"业务限流"}},[v._v("业务限流")]),v._v(" "),s("p",[s("strong",[v._v("每30s能发表一次消息")])]),v._v(" "),s("h4",{attrs:{id:"分库分表"}},[v._v("分库分表")]),v._v(" "),s("h5",{attrs:{id:"消息表的设计"}},[v._v("消息表的设计")]),v._v(" "),s("p",[s("strong",[v._v("消息索引表多份存储")])]),v._v(" "),s("h4",{attrs:{id:"监控"}},[v._v("监控")]),v._v(" "),s("h5",{attrs:{id:"系统监控"}},[v._v("系统监控")]),v._v(" "),s("p",[s("strong",[v._v("服务器指标监控")])]),v._v(" "),s("p",[s("strong",[v._v("数据库监控")])]),v._v(" "),s("p",[v._v("连接数")]),v._v(" "),s("p",[v._v("满请求")]),v._v(" "),s("p",[v._v("磁盘")]),v._v(" "),s("p",[s("strong",[v._v("Redis监控")])]),v._v(" "),s("p",[v._v("内存")]),v._v(" "),s("p",[v._v("慢请求")]),v._v(" "),s("p",[v._v("QPS")]),v._v(" "),s("p",[v._v("连接数")]),v._v(" "),s("p",[v._v("Redis Hot Key")]),v._v(" "),s("p",[v._v("Redis Big Key")]),v._v(" "),s("p",[s("strong",[v._v("MQ监控")])]),v._v(" "),s("p",[v._v("消息积压")]),v._v(" "),s("p",[v._v("消息生产量")]),v._v(" "),s("p",[v._v("消息消费量")]),v._v(" "),s("h5",{attrs:{id:"业务监控"}},[v._v("业务监控")]),v._v(" "),s("p",[s("strong",[v._v("5分钟回复率")])]),v._v(" "),s("p",[v._v("Flink Session Window")]),v._v(" "),s("p",[v._v("几分钟没有回复，触发统计指标。")]),v._v(" "),s("p",[s("strong",[v._v("恶意刷屏")])]),v._v(" "),s("p",[v._v("Flink CEP")]),v._v(" "),s("p",[s("strong",[v._v("恶意评论")])]),v._v(" "),s("p",[v._v("Flink CEP")]),v._v(" "),s("p",[s("strong",[v._v("连接数监控")])]),v._v(" "),s("p",[v._v("Redis Key数量")]),v._v(" "),s("p",[s("strong",[v._v("会话量监控")])]),v._v(" "),s("p",[v._v("Flink Session Window")]),v._v(" "),s("p",[v._v("几分钟没有消息回复，自动触发结束。对回话数量进行统计")])])}),[],!1,null,null,null);_.default=i.exports}}]);